#include "EActor.h"

// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  [0] Конструктор 
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
EActor::EActor(const sf::Vector2f position, const std::string& texturePath) 
    : position(position), velocity(0, 0), rotation(0.0)
{
    // ================================================================================================
    //
    // Этот код:
    //      выполняет проверку на успешную загрузку текстуры из файла 
    //      обрабатывает возможную ошибку
    //
    if(!objectTexture.loadFromFile(texturePath)) {
        throw std::runtime_error("Failed to load texture from: " + texturePath);
    }
    //
    // ================================================================================================
    
    // ================================================================================================
    //
    // Устанавливаем текстуру спрайту
    //
    objectActorSprite.setTexture(objectTexture);
    //
    // ================================================================================================

    // ================================================================================================
    //
    // Устанавливаем позицию спрайта
    //
    objectActorSprite.setPosition(this->position);
    //
    // ================================================================================================

}







// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  [1] Конструктор
//  
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
EActor::EActor()
    : position(0, 0), velocity(0, 0), rotation(0.0)
{
    // ================================================================================================
    //
    // Этот код:
    //      выполняет проверку на успешную загрузку текстуры из файла 
    //      обрабатывает возможную ошибку
    //
    if (!objectTexture.loadFromFile("Images/Sprite-0006.png")) 
    {
        throw std::runtime_error("Failed to load texture from: Images/Sprite-0006.png");
    }
    //
    // ================================================================================================

    // ================================================================================================
    //
    // Устанавливаем текстуру спрайту
    //
    objectActorSprite.setTexture(objectTexture);
    //
    // ================================================================================================

    // ================================================================================================
    //
    // Устанавливаем позицию спрайта
    //
    objectActorSprite.setPosition(this->position);
    //
    // ================================================================================================
}








// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  [2] Конструктор
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
EActor::EActor(const sf::Vector2f position)
    : position(position), velocity(0, 0), rotation(0.0)
{
    // ================================================================================================
    //
    // Этот код:
    //      выполняет проверку на успешную загрузку текстуры из файла 
    //      обрабатывает возможную ошибку
    //
    if (!objectTexture.loadFromFile("Images/Sprite-0006.png"))
    {
        throw std::runtime_error("Failed to load texture from: Images/Sprite-0006.png");
    }
    //
    // ================================================================================================

    // ================================================================================================
    //
    // Устанавливаем текстуру спрайту
    //
    objectActorSprite.setTexture(objectTexture);
    //
    // ================================================================================================

    // ================================================================================================
    //
    // Устанавливаем позицию спрайта
    //
    objectActorSprite.setPosition(this->position);
    //
    // ================================================================================================
}









// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Метод для отрисовки актёра
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
void EActor::draw(sf::RenderWindow& window)
{
    window.draw(objectActorSprite);
}









// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Установка позиции актёра
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
void EActor::setPosition(const sf::Vector2f& position) 
{
    this->position = position;
}










// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Получение позиции актёра
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
sf::Vector2f EActor::getPosition() 
const {
    return this->position;
}










// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Установка угла поворота
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
void EActor::setRotation(float angle) 
{
    this->rotation = angle;
}










// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Получение угла поворота
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
float EActor::getRotation() 
const {
    return this->rotation;
}










// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Установка скорости
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
void EActor::setVelocity(const sf::Vector2f& velocity)
{
    this->velocity = velocity;
}










// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Получение скорости
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
sf::Vector2f EActor::getVelocity() 
const {
    return this->velocity;
}














// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Обновление состояние актера
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
void EActor::Update(float deltaTime)
{
    this->position += this->velocity * deltaTime;
    this->objectActorSprite.setScale(this->scaleX, this->scaleY);
    this->objectActorSprite.setPosition(this->position);
    this->objectActorSprite.setRotation(this->rotation);
}











// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Изменения размера актёра по двум осям
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
void EActor::setScaleXY(const float scaleXY)
{
    scaleX = scaleXY; scaleY = scaleXY;
}










// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Изменения размера актёра по оси X
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
void EActor::setScaleX(const float scaleX)
{
    this->scaleX = scaleX;
}









// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
//  Изменения размера актёра по оси Y
//
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
void EActor::setScaleY(const float scaleY)
{
    this->scaleY = scaleY;
}